<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd"
      xmlns:r="tapestry-library:rjzjh"
      xmlns:s="tapestry-library:tams"
      xmlns:p="tapestry:parameter"> 
<head>
   <title isMenu="true" module="3">Consumer管理</title>
</head>
<body>
   <r:query id="q"  qBlock="query" queryUrl="/es/consumerManager:query" uBlock="save"   saveUrl="/es/consumerManager:save" deleteUrl="/es/consumerManager:del" opFormatter="showopt" 
        columns="[[{field:'id',width:350,title:'id'},{field:'taskOnlineId',width:200,title:'在线任务'},{field:'topic',width:150,title:'topic'},{field:'groupId',width:100,title:'组ID'},{field:'startPosition',width:100,title:'监听位置'},{field:'busiPlugin',width:150,title:'业务插件'},${ColDifferent},{field:'op',width:350,title:'操作'}]]" 
        dialogStyle="width:900px;height:600px;" initAddHandle="initAdd" initSaveHandle="initUpdate"  saveCheckHandle="saveCheck" pagination="false"/>
   <t:block id="query">
       <table class="frame_table_list_4">
		 <tr>
			    <td class="frame_table_list_4_righttext">topic</td>
				<td>
				   <r:validatebox name="topic"/>
				</td>				
			 	<td class="frame_table_list_4_righttext"></td>			 	    
			 	<td>
			 	</td>
			 	<td class="frame_table_list_4_righttext"></td>
			 	<td>
			 	</td>
			 	<td class="frame_table_list_4_righttext"></td>
		 </tr>
	  </table>
   </t:block>
   
   <t:block id="save">
        <table class="frame_table_list_2">
                  <tr>
			         <td class="frame_table_list_2_righttext">
			            <font>提示：</font>
			         </td>
			         <td  colspan="3" align="left">
			            <font color="red">不同的ID将是新增，在线任务会使用数据库配置(用于eror被数据和没设置key时取key)和kafka集群配置</font>
			         </td>
			      </tr>
			      <tr>
			        <td class="frame_table_list_2_righttext" name="trdb">id</td>
			         <td>
			             <r:validatebox name="id" style="width:280px;" required="true"/>
			             <input type="hidden" name="isInsert" id="isInsert"/>
	                 </td>	
	                   <td class="frame_table_list_2_righttext">在线任务</td>
			         <td>
			          <r:combogrid id="taskSel" name="taskOnlineId"  columns="[[{field:'id',width:110,title:'id'},{field:'ip',width:280,title:'ip'},{field:'senderEnum',width:60,title:'发送者'}]]" idfield="id" panelWidth="460" panelHeight="300" textfield="id" width="200" pagination="false" required="true" url="/duckula/binlogDownload:queryTasks?namespace=${namespace}"></r:combogrid>
			         </td>			        
			      </tr>
			      <tr>
			         <td class="frame_table_list_2_righttext">topic</td>
			         <td>
			             <r:validatebox name="topic" style="width:280px;" required="true"/>
	                 </td>
			         <td class="frame_table_list_2_righttext">组ID</td>
			         <td>
			            <r:validatebox name="groupId" style="width:280px;" required="false"/>
			          </td>
			      </tr>	
			      <tr>
			        <td class="frame_table_list_2_righttext" name="trdb">监听位置</td>
			         <td name="trdb">
			            <r:numberbox  name="startPosition" style="width:60px;" min="0"  missingMessage="位置必须大于0" required="false"/>
			         </td>
			          <td class="frame_table_list_2_righttext" name="trdb">业务线程数</td>
			         <td name="trdb">
			            <r:numberbox  name="busiNum" style="width:60px;" min="2" max="60" missingMessage="每段数量在2到60之间" required="false"/>
	                 </td>	                                 
			      </tr>	
			      
			      <tr>
			        <td class="frame_table_list_2_righttext" name="trdb">拉取最大数量</td>
			         <td name="trdb">
			            <r:numberbox  name="batchNum" style="width:60px;" min="1"  missingMessage="默认为50" required="false"/>
			         </td>
			          <td class="frame_table_list_2_righttext" name="trdb">拉取超时时间</td>
			         <td name="trdb">
			            <r:numberbox  name="batchTimeout" style="width:60px;" min="100" max="180000" missingMessage="超时时间" required="false"/> 毫秒
	                 </td>	                                 
			      </tr>	
			      
			      <tr>
			         <td class="frame_table_list_2_righttext" name="trdb">业务插件</td>
			         <td>
			             <r:combogrid id="busiPluginSel" name="busiPlugin"  columns="[[{field:'id',width:100,title:'id'},{field:'projectName',width:250,title:'项目名称'},{field:'update',width:100,title:'上传人'},{field:'lastUpdateTime',width:150,title:'上传时间'},{field:'pluginFileName',width:250,title:'插件文件名'},{field:'fileExit',width:100,title:'ops存在'},{field:'fileExitServer',width:100,title:'同步状态'}]]" idfield="pluginFileName" panelWidth="1100" panelHeight="300" textfield="pluginFileName" width="280" pagination="false" url="/es/busiPluginManager:query"></r:combogrid>
	                 </td>
	                 <td class="frame_table_list_2_righttext" name="trdb">发送者</td>
			         <td>
			             <r:comboboxenum id="senderConsumerEnum_save"  name="senderConsumerEnum" enumClass="net.wicp.tams.duckula.common.beans.SenderConsumerEnum" required="true" changeHandle="changeSender"></r:comboboxenum>
			         </td>
			      </tr>
				  <tr>
			         <td class="frame_table_list_2_righttext">中间件类型</td>
			         <td>
			            <r:comboboxenum id="middlewareType_save"  name="middlewareType" enumClass="net.wicp.tams.duckula.common.constant.MiddlewareType" required="false" readonly="true"></r:comboboxenum>
	               </td>
			 	  	 <td class="frame_table_list_2_righttext">中间件实例</td>
			 	     <td>
			 	        <r:combobox id="middlewareInst_save" name="middlewareInst" textField="text" valueField="value" url="/es/indexManager:queryMiddlewareType" parent="middlewareType_save" required="false"></r:combobox>
			 	     </td>
			      </tr>
			      
			     <tr>
			         <td class="frame_table_list_2_righttext" name="trdb">CPU</td>
			         <td name="trdb">
			            <r:numberbox  name="cpu" style="width:60px;" min="500" max="2000" missingMessage="1000m为CPU的1核" required="true"/> m
	                 </td>
			         <td class="frame_table_list_2_righttext">内存</td>
			         <td>
			            <r:numberbox  name="memory" style="width:60px;" min="512" max="4096" missingMessage="1024Mi为1G" required="true"/> Mi
	                 </td>
			      </tr>
			      
			       <tr name="showmodel">
			        <td colspan="4">
				        <table id="dg" title="规则编辑" style="width:98%;height:160px"
					            toolbar="#toolbar" pagination="false" idField="id"
					            rownumbers="false" fitColumns="true" singleSelect="true">
					        <thead>
					            <tr>
					                <th field="db" width="15%" editor="{type:'validatebox',options:{required:true}}">库名模式</th>
					                <th field="tb" width="30%" editor="{type:'validatebox',options:{required:true}}">表名模式</th>
					                <th field="topic" width="20%" editor="{type:'validatebox',options:{required:false}}">消息主题</th>
					                <th field="key" width="15%" editor="{type:'validatebox',options:{required:false}}">主键</th>
					                <th field="relakey" width="12%" editor="{type:'validatebox',options:{required:false}}">关联字段</th>
					                <th field="index" width="12%" editor="{type:'validatebox',options:{required:false}}">es索引</th>
					                <th field="splitkey" width="12%" editor="{type:'validatebox',options:{required:false}}">分隔字段</th>
					                
					                <th field="redisurl" width="12%" editor="{type:'validatebox',options:{required:false}}">缓存地址</th>
					                 <th field="appid" width="12%" editor="{type:'validatebox',options:{required:false}}">appid</th>
					                <th field="type" width="12%" editor="{type:'validatebox',options:{required:false}}">索引类型</th>
					                <th field="middleware" width="12%" editor="{type:'validatebox',options:{required:false}}">中间件集群</th>
					                <th field="dbinstanceid" width="12%" editor="{type:'validatebox',options:{required:false}}">中间件实例</th>
					                <th field="dbtb" width="22%" editor="{type:'validatebox',options:{required:false}}">库名表名(格式：db.tb)</th>
					                <th field="partitions" width="12%" editor="{type:'validatebox',options:{required:false}}">分区数</th>
					                <th field="copynum" width="12%" editor="{type:'validatebox',options:{required:false}}">复制份数</th>	
					                <th field="ks" width="12%" editor="{type:'validatebox',options:{required:false}}">名称空间</th>
					                <th field="table" width="12%" editor="{type:'validatebox',options:{required:false}}">表名</th>			               
					                <th field="other" width="12%" editor="{type:'validatebox',options:{required:false}}">其它配置</th>
					            </tr>
					        </thead>
					    </table>
					     <div id="toolbar">
					        <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-add" plain="true" onclick="javascript:$('#dg').edatagrid('addRow')">新增规则</a>
					        <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" plain="true" onclick="javascript:$('#dg').edatagrid('destroyRow')">删除</a>
					        <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-undo" plain="true" onclick="javascript:$('#dg').edatagrid('cancelRow')">取消</a>
					        <a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-save" plain="true" onclick="javascript:$('#dg').edatagrid('saveRow')">保存</a>	
					        <font color="red" style="font-weight:bold;"> &emsp;&msp;&emsp;&emsp;&emsp;     请选择接收者，编辑完成后请“保存”,配置以输入框内容为准，界面只是辅助输入	</font>			        
					        <r:validatebox id="rulesEdit"  name="rules" style="width:735px;" required="true"/>
					    </div>
			        </td>
			      </tr>		      
			       <tr>
			         <td class="frame_table_list_2_righttext">备注</td>
			         <td colspan="3">
			            <input  name="remark" class="easyui-textbox" data-options="multiline:true,height:80,width:650"/>
	                 </td>
			      </tr>
	 </table>
   </t:block>
      
   <r:dialogtree id="server_dialog" treeLoadUrl="/duckula/taskManager:QueryTree" title="指派服务器" width="600" sucHandle="doSuc" checkHandle="doCheck"></r:dialogtree>
<script>
     var needServer=${needServer};
     function showopt(value,row,index){
            var optCan=gt( row.hostNum,0);
            var k8sCan=!(""==row.podStatus);//Pending
            
            var lastCan= needServer?optCan:k8sCan;            
       	    var update= '<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-edit"  data-options="disabled:'+lastCan+'"  style="margin-right:10px" onclick="_doUpdate('+index+') ">'+msg.update+'</a>';
       	    var deletebut= '<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-remove" data-options="disabled:'+lastCan+'" style="margin-right:10px" onclick="_doDelete('+index+') ">'+msg.delete_+'</a>'; 
       	    var serverbut='<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-role" style="margin-right:10px" onclick="doServer(\''+index+'\') ">分派服务器</a>';  
       	    
       	    var k8sbut='<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-role" data-options="disabled:'+k8sCan+'" style="margin-right:10px" onclick="doStartK8sTask(\''+index+'\') ">启动任务</a>';
       	    var stopServer_k8s='<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-role" data-options="disabled:'+!k8sCan+'" style="margin-right:10px" onclick="doServerStopFork8s(\''+index+'\') ">停止k8s任务</a>';
       	    
       	    var stopServer='<a href="javascript:void(0)" class="easyui-linkbutton" iconCls="icon-role" data-options="disabled:'+!optCan+'" style="margin-right:10px" onclick="doServerStop(\''+index+'\') ">停止服务器</a>';
       	    
       	    if(needServer){
			   return update+deletebut+serverbut+stopServer;
			}else{
			   return update+deletebut+k8sbut+stopServer_k8s;
			}
     }
     
     var allcolumn=["topic","key","relakey","appid","redisurl","splitkey","index","type","middleware","dbinstanceid","dbtb","partitions","copynum","ks","table","other"];
     function showRuleColumn(showcolumns){
        for (var item of allcolumn) {
           $('#dg').edatagrid("hideColumn", item);
		   //$('#dg').edatagrid("showColumn", item);
		}
		
		for (var item of showcolumns) {
		   $('#dg').edatagrid("showColumn", item);
		}
	 }
	 
	 
	 function changeSender(val){      
        if('es6' == val || 'es7' == val){
            $('#middlewareType_save').combobox('setValue','es');
            //$('#middlewareInst_save').validatebox('required','true');           
            showRuleColumn(["index","key","relakey","partitions","copynum"]);
        }else if('jdbc'==val){
            $('#middlewareType_save').combobox('setValue','');
           // $('#middlewareInst_save').validatebox('required','false');
            showRuleColumn(["key","dbinstanceid","dbtb"]);
        }else if('kafka'==val){
            $('#middlewareType_save').combobox('setValue','kafka');
           // $('#middlewareInst_save').validatebox('required','false');
            showRuleColumn(["key","topic"]);
        }else if('no'==val){
            $('#middlewareType_save').combobox('setValue','');
           // $('#middlewareInst_save').validatebox('required','false');
            showRuleColumn([]);
        }
     }
     
     function syncRule(){
	   var rules= $('#rulesEdit').val();
          $.post($.rjzjh.packurl('/duckula/taskManager:ruleData'),{'ruleData':rules},function(data){
	         //alert(data);//更新edatagrid
	         $('#dg').edatagrid("loadData", data);
	      },'json');
	 }
	
	function initUpdate(){
	  $('#isInsert').val('no');
      syncRule();
    }
	 
	 
	 	
     
     function doServer(index){
         var row=getRow(index);
         require(["component/rjzjh/dialogtree"], function(sel) {
			  sel.loadData('server_dialog',{id:row.hosts,taskid:row.id});
	     });
     }
     
     function doSuc(data){
        jQuery('#q_grid').datagrid('reload');
        $('#server_dialog_dialog').dialog('close');
     }
    function doCheck(ids){
      if(gt(ids.length,1)){
            $.rjzjh.alert("只能是单选或是取消选择");
            return false;
      }else{
        return true;
        }       
     }    
     
     function getRow(index){
     	 var rows = jQuery('#q_grid').datagrid('getRows');
     	 return rows[index];
     }
     
    function doStartK8sTask(index){
        var row=getRow(index);
       $.rjzjh.confirm('你确定要启动此任务吗？',function(){
           $.messager.progress({
		    	title:window.msg.hintwaiting,
		    	msg:window.msg.hinthandling
            });    
           $.post($.rjzjh.packurl('/es/consumerManager:startK8sTask'),{taskid:row.id},function(data){
             $.messager.progress('close');
             $.rjzjh.opt2(data,function(){
			    jQuery('#q_grid').datagrid('reload');
	         }); 
	       },'json');
       });
     }
     
     function doServerStop(index){
       var row=getRow(index);
       $.rjzjh.confirm('你确定要停止此任务吗？',function(){
           $.messager.progress({
		    	title:window.msg.hintwaiting,
		    	msg:window.msg.hinthandling
            });    
           $.post($.rjzjh.packurl('/duckula/taskManager:stopTask'),{taskid:row.id,serverid:row.hosts,commandtype:'consumer'},function(data){
             $.messager.progress('close');
             $.rjzjh.opt2(data,function(){
			    jQuery('#q_grid').datagrid('reload');
	         }); 
	       },'json');
       });
     }
     
    function doServerStopFork8s(index){
       var row=getRow(index);
       $.rjzjh.confirm('你确定要停止此任务吗？',function(){
           $.messager.progress({
		    	title:window.msg.hintwaiting,
		    	msg:window.msg.hinthandling
            });    
           $.post($.rjzjh.packurl('/duckula/taskManager:stopTaskForK8s'),{taskid:row.id,commandtype:'consumer'},function(data){
             $.messager.progress('close');
             $.rjzjh.opt2(data,function(){
			    jQuery('#q_grid').datagrid('reload');
	         }); 
	       },'json');
       });
     }
     
     
     function saveCheck(formdata){      
       return true;
     }
     
     function getRow(index){
     	 var rows = jQuery('#q_grid').datagrid('getRows');
     	 return rows[index];
     }        
     function initAdd(){
        $('#isInsert').val('yes');
       $('#dg').edatagrid("loadData", []);
     }
      
      
    function  updateRuleInput(index,data,changes){
      			 var sendClassSel=  $('#senderConsumerEnum_save').combobox('getValue');
				   if(sendClassSel==""){
				      $.rjzjh.alert("请选择接收者!");
				      return false;
				   }
				   //数据检查
				   var dgdata= $('#dg').edatagrid('getData');
				   for (var row of dgdata.rows) {
					  if(sendClassSel==='es6' || sendClassSel=='es7'){
			               if(row.index==''||row.key==''){
				               $.rjzjh.alert('es发送类型需要设置索引、主键');
				               return false;
				           }
			           }else if(sendClassSel=='redis'){
			               if(row.key==''||lt(row.key.indexOf('%s'),0)){
				               $.rjzjh.alert('redis发送类型需要设置主键且含有"%s"');
				               return false;
				           }
			           }			           
				   }
                   //提交后端进行格式化
				   //onSave有时会不起作用，故用onBeforeSave
				   var datastr=JSON.stringify(dgdata);	
				   $.post($.rjzjh.packurl('/duckula/taskManager:dataConvert'),{'saveData':datastr},function(data){
					  $.rjzjh.opt2(data,function(){
					    if("操作成功"==data.msg){
					       jQuery('#rulesEdit').val("");
					    }else{
					      jQuery('#rulesEdit').val(data.msg);
					    }
			          });
			       },'json');		   
	 }
         
  $(function(){
     $('#rulesEdit').blur(function(){
          syncRule();
      });     
     $('#dg').edatagrid({
			    data: [
					{db:'value11', tb:'value12'},
					{db:'value21', tb:'value22'}
				],
				destroyMsg: {
					norecord:{	// when no record is selected
						title:'警告',
						msg:'没有选择记录.'
					},
					confirm:{	// when select a row
						title:'确认',
						msg:'您确定要删除此监听规则吗?'
					}
				},
				autoSave: false,
				onDestroy: updateRuleInput,
				onAfterEdit: updateRuleInput
      }); 
   });    
   
</script>
</body>
</html>